version: "3.3"
services:
  ## build redis for edumeet-room-server
  redis:
    image: redis
    network_mode: "host"
    entrypoint: redis-server /usr/local/etc/redis/redis.conf
    restart: unless-stopped
    volumes:
      - ${PWD}/configs/redis:/usr/local/etc/redis

  ## build edumeet-room-server
  edumeet-room-server:
    env_file: .env
    container_name: edumeet-room-server
    depends_on: 
      - redis
    restart: unless-stopped
    build:
      args:
        - BASEDIR=${BASEDIR}
        - GIT_SERVER=${GIT_SERVER}
        - REPOSITORY=${REPOSITORY}
        - EDUMEETSERVER=${EDUMEETSERVER}
        - NODE_ENV=${NODE_ENV}
        - SERVER_DEBUG=${SERVER_DEBUG}
        - BRANCHSERVER=${BRANCHSERVER}
        - TAG=${TAG}
      context: .
      dockerfile: Dockerfile-server
      
    ## use host mode for the media ports
    network_mode: "host"
    stdin_open: true
    tty: true

  ## build edumeet-client instance(s)
  edumeet-client-a:
    env_file: .env
    container_name: edumeet-client-a
    volumes:
      - ${PWD}/configs/app:/usr/share/nginx/html/config
      ## todo 
      #- ${PWD}/images:/usr/share/nginx/html/images
      #- ${PWD}/privacy:/usr/share/nginx/html/static/privacy
    build:
      args:
        - BASEDIR=${BASEDIR}
        - GIT_SERVER=${GIT_SERVER}
        - REPOSITORY=${REPOSITORY}
        - EDUMEETCLIENT=${EDUMEETCLIENT}
        - NODE_ENV=${NODE_ENV}
        - SERVER_DEBUG=${SERVER_DEBUG}
        - BRANCHCLIENT=${BRANCHCLIENT}
        - TAG=${TAG}
      context: .
      dockerfile: Dockerfile-client
    ## database config (mysql)
    #depends_on:
    #  - database
    #volumes:
    #  - ./www:/var/www/html:Z
    network_mode: "host"
  ## build edumeet-client instance(s)
  edumeet-translator:
    env_file: .env
    container_name: edumeet-translator
    #volumes:
    #  - ${PWD}/configs/app:/usr/share/nginx/html/config
    build:
      args:
        - BASEDIR=${BASEDIR}
        - GIT_SERVER=${GIT_SERVER}
        - REPOSITORY=${REPOSITORY}
        - EDUMEETCLIENT=${EDUMEETCLIENT}
        - BRANCHCLIENT=${BRANCHCLIENT}
      context: .
      dockerfile: Dockerfile-translator
    ## database config (mysql)
    #depends_on:
    #  - database
    #volumes:
    #  - ./www:/var/www/html:Z
    network_mode: "host"
  #edumeet-client-b:
  #  env_file: .env
  #  container_name: edumeet-client-b
  #  volumes:
  #    - ${PWD}/configs/app:/usr/share/nginx/html/config
  #  build:
  #    context: .
  #    dockerfile: Dockerfile-client
  #  network_mode: "host"

  ##add pgsql database
  #db:
  #  image: postgres:14.1-alpine
  #  restart: always
  #  environment:
  #    - POSTGRES_USER=postgres
  #    - POSTGRES_PASSWORD=postgres
  #  ports:
  #    - '5432:5432'
  #  volumes: 
  #    - db:/var/lib/postgresql/data

  ## add mysql database
  #database:
  #  container_name: database
  #  image: mysql
  #  restart: always
  #  environment:
  #    MYSQL_ROOT_PASSWORD: root
  #    MYSQL_DATABASE: edumeet
  #    MYSQL_USER: edumeet
  #    MYSQL_PASSWORD: password
  #  #ports:
  #  #  - 9906:3306
  #  volumes:
  #    - dbdata:/var/lib/mysql

  # add mysql database manadgement
  #phpmyadmin:
  #  container_name: phpmyadmin
  #  image: phpmyadmin/phpmyadmin
  #  ports:
  #    - 8080:80
  #  restart: always
  #  environment:
  #    PMA_HOST: database
  #  depends_on:
  #    - database

  # proxy with haproxy
  #haproxy:
  #    image: haproxy:2.2
  #    volumes:
  #        - ./haproxy:/haproxy-override
  #        - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
  #    links:
  #        - edumeet-client-a
  #        - edumeet-client-b
  #    ports:
  #        - "80:80" # proxy
  #        - "70:70" # stats

## volumes for database(s)
#volumes:
#  db:
#    driver: local
#  dbdata:
