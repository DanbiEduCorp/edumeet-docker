version: "3.3"
services:
  ## build edumeet-room-server
  edumeet-room-server:
    env_file: .env
    restart: unless-stopped
    volumes:
      - ${PWD}/configs/server:/usr/src/app/dist/config
      - ${PWD}/certs:/usr/src/app/certs
    container_name: edumeet-room-server
    #image: ${REPOSITORY}/${EDUMEET_SERVER}-room-server:${TAG}
    # Comment out whole build-section to build edumeet-room-server and not pulling from docher-hub
    build:
      args:
        - GIT_SERVER=${GIT_SERVER}
        - REPOSITORY=${REPOSITORY}
        - EDUMEET_SERVER=${EDUMEET_SERVER}
        - BRANCH_SERVER=${BRANCH_SERVER}
      context: .
      dockerfile: Dockerfile-room-server
    image: ${REPOSITORY}/${EDUMEET_SERVER}:${TAG}
    ## use host mode for the media ports
    network_mode: "host"
    stdin_open: true
    tty: true

  ## build edumeet-client instance + web proxy
  edumeet-client:
    env_file: .env
    volumes:
      - ${PWD}/configs/app:/usr/share/nginx/html/config
      - ${PWD}/configs/nginx:/etc/nginx/conf.d
      - ${PWD}/certs:/etc/edumeet/certs
    container_name: edumeet-client
    #image: ${REPOSITORY}/${EDUMEET_CLIENT}:${TAG}
    # Comment out whole build-section to build edumeet-room-server and not pulling from docher-hub
    build:
      args:
        - GIT_SERVER=${GIT_SERVER}
        - REPOSITORY=${REPOSITORY}
        - EDUMEET_CLIENT=${EDUMEET_CLIENT}
        - BRANCH_CLIENT=${BRANCH_CLIENT}
      context: .
      dockerfile: Dockerfile-client
    image: ${REPOSITORY}/${EDUMEET_CLIENT}:${TAG}
    ports:
        - "80:80"
        - "443:443"
        ## build edumeet-client instance + web proxy
  edumeet-media-node:
    env_file: .env
    volumes:
      - ${PWD}/configs/app:/usr/share/nginx/html/config
    container_name: edumeet-media-node
    #image: ${REPOSITORY}/${EDUMEET_CLIENT}:${TAG}
    # Comment out whole build-section to build edumeet-room-server and not pulling from docher-hub
    build:
      args:
        - GIT_SERVER=${GIT_SERVER}
        - REPOSITORY=${REPOSITORY}
        - EDUMEET_MN_SERVER=${EDUMEET_MN_SERVER}
        - BRANCH_MN_SERVER=${BRANCH_MN_SERVER}
      context: .
      dockerfile: Dockerfile-media-node
    image: ${REPOSITORY}/${EDUMEET_MN_SERVER}:${TAG}
    ports:
        - "3000:3000"
        - "40000-40249:40000-40249"
  edumeet-db:
    image: postgres:14.1-alpine
    container_name: edumeet-db
    restart: always
    environment:
      - POSTGRES_USER=edumeet
      - POSTGRES_PASSWORD=edumeet
    ports:
      - '5432:5432'
    volumes: 
      - edumeet-db:/var/lib/postgresql/data

  #edumeet-management-server:
  #  env_file: .env
  #  container_name: edumeet-management-server
  #  volumes:
  #    - ${PWD}/configs/mgmt:/usr/src/app/config
  #  #image: ${REPOSITORY}/${EDUMEET_CLIENT}:${TAG}
  #  # Comment out whole build-section to build edumeet-room-server and not pulling from docher-hub
  #  build:
  #    args:
  #      - GIT_SERVER=${GIT_SERVER}
  #      - REPOSITORY=${REPOSITORY}
  #      - EDUMEET_MGMT_SERVER=${EDUMEET_MGMT_SERVER}
  #      - BRANCH_MGMT_SERVER=${BRANCH_MGMT_SERVER}
  #    context: .
  #    dockerfile: Dockerfile-management-server
  #  image: ${REPOSITORY}/${EDUMEET_MGMT_SERVER}:${TAG}
  #  ports:
  #      - "3030:3030"
  #  depends_on: 
  #    - edumeet-db

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: edumeet@edu.meet
      PGADMIN_DEFAULT_PASSWORD: edumeet
    volumes:
      - pgadmin-data:/var/lib/pgadmin

  edumeet-management-client:
    env_file: .env
    container_name: edumeet-management-client
    volumes:
      - ${PWD}/configs/mgmt-client:/usr/src/app/public/config
    #image: ${REPOSITORY}/${EDUMEET_CLIENT}:${TAG}
    # Comment out whole build-section to build edumeet-room-server and not pulling from docher-hub
    build:
      args:
        - GIT_SERVER=${GIT_SERVER}
        - REPOSITORY=${REPOSITORY}
        - EDUMEET_MGMT_CLIENT=${EDUMEET_MGMT_CLIENT}
        - BRANCH_MGMT_CLIENT=${BRANCH_MGMT_CLIENT}
      context: .
      dockerfile: Dockerfile-management-client
    image: ${REPOSITORY}/${EDUMEET_MGMT_CLIENT}:${TAG}
    ports:
        - "3001:3000"


  keycloak:
    container_name: edumeet_keycloak
    volumes:
      - ${PWD}/certs:/opt/keycloak/conf
      - ${PWD}/configs/kc:/opt/keycloak/data/import
    environment:
      KEYCLOAK_ADMIN: admin2 
      KEYCLOAK_ADMIN_PASSWORD: adminpwgenedumeet 
      KC_HTTPS_CERTIFICATE_FILE: /opt/keycloak/conf/edumeet-demo-cert.pem 
      KC_HTTPS_CERTIFICATE_KEY_FILE: /opt/keycloak/conf/edumeet-demo-key.pem
    image: quay.io/keycloak/keycloak:latest
    # /opt/keycloak/bin/kc.sh export --file dev --realm dev      
    # /opt/keycloak/bin/kc.sh import --file /opt/keycloak/data/import/dev.json --override true
    command: start-dev --import-realm

    ports:
      # - "28443:8080"
      - "28080:8443"
    restart: unless-stopped
    
  # build edumeet-translator instance
  # edumeet-translator:
  #   env_file: .env
  #   container_name: edumeet-translator
  #   #image: ${REPOSITORY}/edumeet-translator:${TAG}
  #   ## TODO
  #   build:
  #     args:
  #       - BASEDIR=${BASEDIR}
  #       - GIT_SERVER=${GIT_SERVER}
  #       - REPOSITORY=${REPOSITORY}
  #       - EDUMEET_CLIENT=${EDUMEET_CLIENT}
  #       - BRANCH_CLIENT=${BRANCH_CLIENT}
  #     context: .
  #     dockerfile: Dockerfile-translator
  #   ports:
  #       - "8080:80"
 
volumes:
  edumeet-db:
    driver: local
  pgadmin-data:
    driver: local